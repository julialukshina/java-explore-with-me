CREATE TABLE IF NOT EXISTS categories
(
    id   bigint GENERATED BY DEFAULT AS IDENTITY,
    name varchar(255) NOT NULL UNIQUE,
    CONSTRAINT pk_categories PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS compilations
(
    id     bigint GENERATED BY DEFAULT AS IDENTITY,
    pinned boolean      NOT NULL,
    title  varchar(500) NOT NULL,
    CONSTRAINT pk_compilations PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS users
(
    id    bigint GENERATED BY DEFAULT AS IDENTITY,
    name  varchar(255) NOT NULL,
    email varchar(100) NOT NULL UNIQUE,
    CONSTRAINT pk_users PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS events
(
    id                 bigint GENERATED BY DEFAULT AS IDENTITY,
    annotation         varchar(500)                NOT NULL,
    category_id        bigint                      NOT NULL,
    created_on         timestamp WITHOUT TIME ZONE NOT NULL,
    description        varchar(1000)               NOT NULL,
    event_date         timestamp WITHOUT TIME ZONE NOT NULL,
    initiator_id       bigint                      NOT NULL,
    lat                float                       ,
    lon                float                       ,
    paid               boolean                     NOT NULL,
    participant_limit  bigint,
    published_on       timestamp WITHOUT TIME ZONE,
    request_moderation boolean                     NOT NULL,
    state              varchar(50)                 NOT NULL,
    title              varchar(255)                NOT NULL,
    comment_moderation boolean                     NOT NULL,
    CONSTRAINT pk_events PRIMARY KEY (id),
    FOREIGN KEY (category_id) REFERENCES categories (id) ON DELETE CASCADE,
    FOREIGN KEY (initiator_id) REFERENCES users (id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS events_compilations
(
    compilation_id bigint NOT NULL,
    event_id       bigint NOT NULL,
    CONSTRAINT pk_events_compilations PRIMARY KEY (compilation_id, event_id),
    FOREIGN KEY (compilation_id) REFERENCES compilations (id) ON DELETE CASCADE,
    FOREIGN KEY (event_id) REFERENCES events (id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS requests
(
    id           bigint GENERATED BY DEFAULT AS IDENTITY,
    created      timestamp WITHOUT TIME ZONE NOT NULL,
    event_id     bigint                      NOT NULL,
    requester_id bigint                      NOT NULL,
    status       varchar(50)                 NOT NULL,
    CONSTRAINT pk_requests PRIMARY KEY (id),
    FOREIGN KEY (event_id) REFERENCES events (id) ON DELETE CASCADE,
    FOREIGN KEY (requester_id) REFERENCES users (id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS comments
(
    id             bigint GENERATED BY DEFAULT AS IDENTITY,
    text           varchar(1000)               NOT NULL,
    event_id       bigint                      NOT NULL,
    author_id      bigint                      NOT NULL,
    created        timestamp WITHOUT TIME ZONE NOT NULL,
    comment_status varchar(50)                 NOT NULL,
    CONSTRAINT pk_comments PRIMARY KEY (id),
    FOREIGN KEY (author_id) REFERENCES users (id) ON DELETE CASCADE,
    FOREIGN KEY (event_id) REFERENCES events (id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS questions
(
    id        bigint GENERATED BY DEFAULT AS IDENTITY,
    text      varchar(1000)               NOT NULL,
    answer    varchar(1000),
    event_id  bigint                      NOT NULL,
    author_id bigint                      NOT NULL,
    created   timestamp WITHOUT TIME ZONE NOT NULL,
    CONSTRAINT pk_questions PRIMARY KEY (id),
    FOREIGN KEY (author_id) REFERENCES users (id) ON DELETE CASCADE,
    FOREIGN KEY (event_id) REFERENCES events (id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS applications
(
    id         bigint GENERATED BY DEFAULT AS IDENTITY,
    text       varchar(1000)               NOT NULL,
    author_id  bigint                      NOT NULL,
    created    timestamp WITHOUT TIME ZONE NOT NULL,
    app_status varchar(50)                 NOT NULL,
    app_reason varchar(50)                 NOT NULL,
    CONSTRAINT pk_applications PRIMARY KEY (id),
    FOREIGN KEY (author_id) REFERENCES users (id) ON DELETE CASCADE
)







